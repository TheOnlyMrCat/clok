namespace <clok::test>

load "stdio"

use <std::io> # Works like "import std.io.*"

fn sum <i32> [a <i32>; b <i32> = 0] {
	return a + b;
}

fn noop {
	# The thing doesn't even do anything!
}

run {
	one <i32>;

	one = 50;
	two <> = 4093871;

	two++;
	one--;
	one**;
	two//;

	result <i32> = sum [one; two];

	noop [];

	strBytes :<bit> = "Hello, world!";
	strProper <string> = strBytes; # Implicit constructor call string [:<bit>]

	if one == 100; result = 5;
	else if two > 9; one = 100;
	else return;

	if [3 == 5] {
		sum [4];
		# This line won't be reached so it's fine #
		# It should still compile though          #

		# No. Block comments don't actually exist
	} else two++;

	for i <i8> = 20; i < 127; i++; stdout.write [i];

	rpt [one = 5] stdout.write ["Hello, World!"];

	while 1; {
		one++;
	}
}

namespace <clok::test::sub>

class <type> {
	int <i32> protected = 2 * 6 << 3;

	fn internalFn [f <i32>] {
		return sum [int; f];
	}
}
